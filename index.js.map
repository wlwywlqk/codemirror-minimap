{"version":3,"file":"index.js","sources":["src/minimap.ts"],"sourcesContent":["import CodeMirror from 'codemirror';\nimport lodash from 'lodash';\n\nexport enum Constants {\n    DEFAULT_SCALE = 5,\n}\n\nexport interface Options {\n    scale: number;\n}\n\nexport interface FontInfo {\n    font: string;\n    fontSize: number;\n    color: string;\n};\n\nexport type RenderTokenData = {\n    fontInfo: FontInfo,\n    text: string\n}\n\nexport interface RenderLineData {\n    lineHeight: number;\n    tokenData: RenderTokenData[];\n    line: number;\n    handle: any;\n}\n\nclass Slider {\n    public readonly cm: any;\n    public readonly instance: InnerMinimap;\n    public readonly $slider: HTMLDivElement = document.createElement('div');\n\n    public translateY: number = 0;\n\n    private isMoving = false;\n    private startY = 0;\n    private startScrollTop = 0;\n\n    constructor(cm: any, instance: InnerMinimap) {\n        this.cm = cm;\n        this.instance = instance;\n\n        this.$slider.setAttribute('class', 'CodeMirror-minimap__slider');\n        this.$slider.addEventListener('mousedown', this.onMousedown);\n\n        this.instance.$root.appendChild(this.$slider);\n    }\n\n    private onMousedown = (e: MouseEvent) => {\n        this.isMoving = true;\n        this.startY = e.clientY;\n        this.startScrollTop = this.instance.$scrollContainer.scrollTop;\n        document.addEventListener('mousemove', this.onMousemove);\n        document.addEventListener('mouseup', this.onMouseup);\n        document.onselectstart = () => false;\n    }\n\n    private onMouseup = () => {\n        document.removeEventListener('mousemove', this.onMousemove);\n        document.removeEventListener('mouseup', this.onMouseup);\n    }\n\n    private onMousemove = (e: MouseEvent) => {\n        if (!this.isMoving) return;\n        const distance = e.clientY - this.startY;\n        const { renderData, $scrollContainer } = this.instance;\n        const scrollTop = this.startScrollTop\n            + distance\n            / (renderData.height - renderData.sliderHeight)\n            * ($scrollContainer.scrollHeight - $scrollContainer.clientHeight);\n\n        this.instance.$scrollContainer.scrollTo(0, scrollTop);\n    }\n\n\n    public render = () => {\n        const { renderData: { translateY, sliderHeight } } = this.instance;\n\n        this.$slider.style.height = `${sliderHeight}px`;\n        this.$slider.style.transform = `translateY(${translateY}px)`;\n    }\n\n    public destroy() {\n        if (this.$slider.parentNode) {\n            this.$slider.parentNode.removeChild(this.$slider);\n        }\n\n    }\n}\n\nclass RenderData {\n    public readonly cm: any;\n    public readonly instance: InnerMinimap;\n\n    public data: RenderLineData[] = [];\n    public yAxisMap: number[] = [];\n\n    public height: number = 0;\n    public sliderHeight: number = 0;\n    public translateY: number = 0;\n\n    constructor(cm: any, instance: InnerMinimap) {\n        this.cm = cm;\n        this.instance = instance;\n    }\n\n    private calcTranslateY() {\n        const { scrollTop, scrollHeight: sh, clientHeight: ch } = this.instance.$scrollContainer;\n        const { clientHeight } = this.instance.$container;\n        const { height, sliderHeight } = this;\n\n        const scrollHeight = sh - ch + clientHeight;\n        if (scrollHeight === clientHeight) {\n            this.translateY = 0;\n            return;\n        }\n\n        if (height < this.instance.$canvas.height) {\n            const viewportStartLine = this.instance.viewportStartLine;\n            const intViewportStartLine = Math.floor(viewportStartLine);\n\n            let y = 0;\n            for (let i = 0; i < intViewportStartLine; i++) {\n                y += this.getLineData(i).lineHeight;\n            }\n            const currentLineData = this.getLineData(intViewportStartLine);\n\n            this.translateY = y + (viewportStartLine - intViewportStartLine) * currentLineData.lineHeight;\n            return;\n        }\n\n        const scrollTopPercent = scrollTop / (scrollHeight - clientHeight);\n        this.translateY = (height - sliderHeight) * scrollTopPercent;\n    }\n\n    private calcHeight() {\n        const maxHeight = this.instance.$canvas.height;\n        const lineCount = this.cm.doc.lineCount();\n        let i = 0;\n        let y = 0;\n\n        while (i <= lineCount - 1 && y < maxHeight) {\n            const lineData = this.getLineData(i);\n            y += lineData.lineHeight;\n            i++;\n        }\n        this.height = Math.min(y, maxHeight);\n    }\n\n    private calcSliderHeight() {\n        const viewportStartLine = this.instance.viewportStartLine;\n        const intViewportStartLine = Math.floor(viewportStartLine);\n\n        const viewportEndLine = this.instance.viewportEndLine;\n        const intViewportEndLine = Math.floor(viewportEndLine);\n\n        let lineData: RenderLineData = this.getLineData(intViewportStartLine);\n        let sliderHeight = (1 - (viewportStartLine - intViewportStartLine)) * lineData.lineHeight;\n        for (let i = intViewportStartLine + 1; i < intViewportEndLine; i++) {\n            lineData = this.getLineData(i);\n            sliderHeight += lineData.lineHeight;\n        }\n        lineData = this.getLineData(intViewportEndLine);\n        sliderHeight += (viewportEndLine - intViewportEndLine) * lineData.lineHeight;\n\n        this.sliderHeight = sliderHeight;\n    }\n\n    public refresh() {\n        this.calcTranslateY();\n\n        this.data = [];\n        this.yAxisMap = [];\n\n        const maxHeight = this.instance.$canvas.height;\n        const lineCount = this.cm.doc.lineCount();\n\n        const viewportStartLine = this.instance.viewportStartLine;\n        const intViewportStartLine = Math.floor(viewportStartLine);\n\n        const lineData: RenderLineData = this.getLineData(intViewportStartLine);\n\n        const startY = this.translateY - (viewportStartLine - intViewportStartLine) * lineData.lineHeight;\n        this.data.push(lineData);\n        this.yAxisMap.push(startY);\n\n        let y = startY;\n        let line = intViewportStartLine - 1;\n        while (y >= 0 && line >= 0) {\n            const ld = this.getLineData(line);\n            this.data.unshift(ld);\n            y -= ld.lineHeight;\n            this.yAxisMap.unshift(y);\n            line--;\n        }\n\n        y = startY + lineData.lineHeight;\n        line = intViewportStartLine + 1;\n        while (y <= maxHeight && line < lineCount) {\n            const ld = this.getLineData(line);\n\n            this.data.push(ld);\n            this.yAxisMap.push(y);\n            y += ld.lineHeight;\n            line++;\n        }\n\n        this.yAxisMap.push(y);\n    }\n\n    private checkFolded(lineHandle: any): boolean {\n        if (lineHandle.markedSpans) {\n            return lineHandle.markedSpans.some(({ marker }) => {\n                return marker.__isFold && marker.lines.indexOf(lineHandle) > 0;\n            })\n        }\n        return false;\n    }\n\n    private getLineData(lineNum: number): RenderLineData {\n        const tokenData: RenderTokenData[] = [];\n        let lineHeight = this.instance.baseLineHeight;\n\n        const handle = this.cm.getLineHandle(lineNum);\n        const tokens = this.cm.getLineTokens(lineNum);\n\n        if (!handle || this.checkFolded(handle)) {\n            return {\n                lineHeight: 0,\n                tokenData,\n                line: lineNum,\n                handle,\n            };\n        }\n\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const token = tokens[i];\n            const fontInfo = this.instance.getFontInfoFromTokenType(token.type);\n            lineHeight = Math.max(fontInfo.fontSize, lineHeight);\n            tokenData.push({\n                fontInfo,\n                text: token.string\n            });\n        }\n\n        return {\n            lineHeight,\n            tokenData,\n            line: lineNum,\n            handle,\n        };\n    }\n\n    public dispatchChange() {\n        this.calcHeight();\n        this.calcSliderHeight();\n    }\n\n    public dispatchViewportChange() {\n        this.calcSliderHeight();\n    }\n}\n\nclass InnerMinimap {\n    public readonly cm: any;\n\n    public readonly $root: HTMLDivElement = document.createElement('div');\n    public readonly $canvas: HTMLCanvasElement = document.createElement('canvas');\n    public readonly $container: HTMLElement;\n    public readonly $scrollContainer: HTMLElement;\n    public readonly scale: number;\n\n    public readonly baseLineHeight: number;\n\n    public readonly renderData: RenderData;\n    public readonly slider: Slider;\n\n    private fontInfoMap: Map<string, FontInfo> = new Map();\n\n    constructor(cm: any, scale: number) {\n        this.cm = cm;\n        this.$container = this.cm.getWrapperElement();\n\n        this.$root.setAttribute('class', 'CodeMirror-minimap');\n\n        this.$canvas.setAttribute('class', 'CodeMirror-minimap__canvas');\n        this.$root.appendChild(this.$canvas);\n\n        this.$container.appendChild(this.$root);\n\n        this.$scrollContainer = this.cm.getScrollerElement();\n        this.scale = scale;\n\n        const { fontSize } = this.getFontInfoFromTokenType(null);\n        this.baseLineHeight = fontSize;\n\n        this.slider = new Slider(this.cm, this);\n        this.renderData = new RenderData(this.cm, this);\n    }\n\n    public get viewportStartLine() {\n        const offset = this.$container.getBoundingClientRect().top;\n        const line = this.cm.lineAtHeight(offset);\n        const lineHandle = this.cm.getLineHandle(line);\n        if (!lineHandle) {\n            return line;\n        }\n        const decimal = Math.max((offset - this.cm.heightAtLine(line)) / lineHandle.height, 0);\n        return line + decimal;\n    }\n\n    public get viewportEndLine() {\n        const offset = this.$container.getBoundingClientRect().bottom;\n        const line = this.cm.lineAtHeight(offset);\n        const lineHandle = this.cm.getLineHandle(line);\n        if (!lineHandle) {\n            return line;\n        }\n        const decimal = Math.max((offset - this.cm.heightAtLine(line)) / lineHandle.height, 0);\n        return line + decimal;\n    }\n\n    public destroy() {\n        if (this.$canvas.parentNode) {\n            this.$canvas.parentNode.removeChild(this.$canvas);\n        }\n    }\n\n    private renderLine(line: number): number {\n        const ctx = this.$canvas.getContext('2d');\n        ctx.textBaseline = 'bottom';\n\n        const { lineHeight, tokenData } = this.renderData.data[line];\n        const y = this.renderData.yAxisMap[line];\n        if (lineHeight <= 0) {\n            return 0;\n        }\n\n        if (tokenData.length === 0) {\n            return this.baseLineHeight;\n        }\n        let x = 0;\n        for (let i = 0, len = tokenData.length; i < len; i++) {\n            const { fontInfo: { font, color }, text } = tokenData[i];\n            ctx.font = font;\n            ctx.fillStyle = color;\n            ctx.fillText(text, x, y + lineHeight);\n            x += ctx.measureText(text).width;\n        }\n    }\n\n    private render = lodash.throttle(() => {\n        this.renderData.refresh();\n        setTimeout(() => {\n            const { width, height } = this.$canvas;\n            const ctx = this.$canvas.getContext('2d');\n            ctx.clearRect(0, 0, width, height);\n            for (let i = 0, len = this.renderData.data.length; i < len; i++) {\n                this.renderLine(i);\n            }\n    \n            this.slider.render();\n        })\n    }, 1000 / 60)\n\n\n    public getFontInfoFromTokenType(type: string = null): FontInfo {\n        if (this.fontInfoMap.has(type)) {\n            return this.fontInfoMap.get(type);\n        }\n        const $el = document.createElement('span');\n        if (type) {\n            $el.setAttribute('class', type.replace(/([^\\s]+)/g, 'cm-$1'));\n        }\n        this.$container.appendChild($el);\n        const style = window.getComputedStyle($el);\n\n        const fontSize = Math.floor(parseFloat(style.fontSize) / this.scale);\n        const result: FontInfo = {\n            font: `${style.fontStyle} ${style.fontWeight} ${fontSize}px ${style.fontFamily}`,\n            fontSize,\n            color: style.color\n        };\n\n        this.fontInfoMap.set(type, result);\n\n        this.$container.removeChild($el);\n        return result;\n    }\n\n    public renderOnResize(width: number, height: number) {\n        this.$canvas.width = width;\n        this.$canvas.height = height;\n        this.$canvas.style.width = `${this.$canvas.width}px`;\n        this.$canvas.style.height = `${this.$canvas.height}px`;\n        // this.cm.display.sizer.style.marginRight = this.$canvas.style.width;\n\n        this.renderOnChange();\n    }\n\n    public renderOnViewportChange() {\n        this.renderData.dispatchViewportChange();\n        this.render();\n    }\n\n    public renderOnChange() {\n        this.renderData.dispatchChange();\n        this.render();\n    }\n}\n\n\n\nclass CodeMirrorMinimap {\n    public readonly cm: any;\n    public readonly $container: HTMLElement;\n    public readonly instance: InnerMinimap;\n    public readonly scale: number;\n\n\n    constructor(cm: any, options?: Options) {\n        const { scale = Constants.DEFAULT_SCALE } = options || {};\n        this.cm = cm;\n        this.scale = Math.max(2, Math.min(10, scale));\n\n        this.$container = this.cm.getWrapperElement();\n        this.instance = new InnerMinimap(this.cm, this.scale);\n\n        this.onResize();\n\n        window.addEventListener('resize', this.onResize);\n        this.cm.on('scroll', this.onCMScroll);\n        this.cm.on('update', this.onCMUpdate);\n    }\n\n\n    public destroy() {\n        window.removeEventListener('resize', this.onResize);\n        this.cm.off('scroll', this.onCMScroll);\n        this.cm.off('update', this.onCMUpdate);\n    }\n\n    private onResize = lodash.throttle(() => {\n        const { width, height } = this.$container.getBoundingClientRect();\n        this.instance.renderOnResize(width / this.scale, height);\n    }, 50)\n\n    private onCMScroll = lodash.throttle((cm: any) => {\n        this.instance.renderOnViewportChange();\n    }, 50)\n\n    private onCMUpdate = () => {\n        this.instance.renderOnChange();\n    }\n\n}\n\n\n(CodeMirror as any).defineOption('minimap', false, function (cm, display, old) {\n    if (old && old !== (CodeMirror as any).Init) {\n        if (cm.state.minimap) {\n            cm.state.minimap.destroy();\n            cm.state.minimap = null;\n        }\n    }\n\n    if (display) {\n        cm.state.minimap = new CodeMirrorMinimap(cm, typeof display === 'object' ? display : {});\n    }\n});\n"],"names":["Constants"],"mappings":"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"}